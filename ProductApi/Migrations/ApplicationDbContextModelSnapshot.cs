// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductApi.Data;

#nullable disable

namespace ProductApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Category 1",
                            Description = "Description for Product 1",
                            ImageUrl = "https://placeholder.co/603x403",
                            Name = "Product Name 1",
                            Price = 100.0
                        },
                        new
                        {
                            Id = 2,
                            Category = "Category 2",
                            Description = "Description for Product 2",
                            ImageUrl = "https://placeholder.co/603x403",
                            Name = "Product Name 2",
                            Price = 200.0
                        },
                        new
                        {
                            Id = 3,
                            Category = "Category 1",
                            Description = "Description for Product 3",
                            ImageUrl = "https://placeholder.co/603x403",
                            Name = "Product Name 3",
                            Price = 300.0
                        },
                        new
                        {
                            Id = 4,
                            Category = "Category 2",
                            Description = "Description for Product 4",
                            ImageUrl = "https://placeholder.co/603x403",
                            Name = "Product Name 4",
                            Price = 400.0
                        },
                        new
                        {
                            Id = 5,
                            Category = "Category 1",
                            Description = "Description for Product 5",
                            ImageUrl = "https://placeholder.co/603x403",
                            Name = "Product Name 5",
                            Price = 500.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
